<Window x:Class="Trivial.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Trivial" xmlns:local1="clr-namespace:Trivial.Convertidores"
        mc:Ignorable="d"
        Icon="assets/icon.ico
        "
        Title="FicTrivial" Height="500" Width="950" MinHeight="680" MinWidth="900" Background="Indigo">
    <Window.Resources>
        <local1:ColorDificultadConverter x:Key="conversorDificultadColor"/>
        <local1:PistaConverter x:Key="conversorPista"/>
        <local1:OpacidadCategoriaConverter x:Key="opacidadConverter"/>
        <local1:ImagenSourceConverter x:Key="categoriaConverter"/>
        <Style TargetType="{x:Type TextBlock}" x:Key="añadirPreguntasTextBlockEstilo">
            <Setter Property="Margin" Value="5,0,0,0"></Setter>
        </Style>
        <Style TargetType="{x:Type TabItem}" >
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template" Value="{DynamicResource TabItemControlTemplate}"/>
        </Style>
        <Style TargetType="{x:Type TabItem}" x:Key="habilitaTabItemEstilo" BasedOn="{StaticResource {x:Type TabItem}}">
            <Setter Property="IsEnabled" Value="True"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=PartidaEnCurso}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Margin" Value="10"></Setter>
            <Setter Property="Padding" Value="3"></Setter>
            <Setter Property="Template" Value="{DynamicResource ButtonControlTemplate}"/>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="pasarButtonEstilo" BasedOn="{StaticResource {x:Type Button}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=PartidaEnCurso}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="pequeñoButtonEstilo">
            <Setter Property="Height" Value="29"/>
            <Setter Property="Width" Value="90"/>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="validarButtonEstilo" BasedOn="{StaticResource pequeñoButtonEstilo}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=trivialTabControl, Path=SelectedItem.Header}" Value="Jugar">
                    <Setter Property="IsDefault" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="tituloTextBlock">
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="nombreCategoria">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,2,0,20"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="disneyAdivinadoTextBlockEstilo" BasedOn="{StaticResource nombreCategoria}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Partida.DisneyAdivinado}" Value="True">
                    <Setter Property="Foreground" Value="Lime"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="pixarAdivinadoTextBlockEstilo" BasedOn="{StaticResource nombreCategoria}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Partida.PixarAdivinado}" Value="True">
                    <Setter Property="Foreground" Value="Lime"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="marvelAdivinadoTextBlockEstilo" BasedOn="{StaticResource nombreCategoria}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Partida.MarvelAdivinado}" Value="True">
                    <Setter Property="Foreground" Value="Lime"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="dcAdivinadoTextBlockEstilo" BasedOn="{StaticResource nombreCategoria}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Partida.DcAdivinado}" Value="True">
                    <Setter Property="Foreground" Value="Lime"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="gestionarTextBlockEstilo">
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
        </Style>
        <Style TargetType="{x:Type GroupBox}" x:Key="gestionarPreguntasGroupBoxEstilo">
            <Setter Property="Margin" Value="0,5,0,0"></Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template" Value="{DynamicResource GroupBoxControlTemplate}"/>
        </Style>
        <Style TargetType="{x:Type GroupBox}" x:Key="añadirPreguntasGroupBoxEstilo" BasedOn="{StaticResource gestionarPreguntasGroupBoxEstilo}">
            <Setter Property="Margin" Value="10"></Setter>
        </Style>
        <Style TargetType="{x:Type Image}" x:Key="jugarCategoriasImagenEstilo">
            <Setter Property="Margin" Value="10"/>
        </Style>
        <Style TargetType="{x:Type CheckBox}" x:Key="ordenarPreguntasCheckboxEstilo">
            <Setter Property="Margin" Value="3"></Setter>
            <Setter Property="Template" Value="{DynamicResource CheckBoxControlTemplate}"/>
            <Setter Property="Foreground" Value="White"/>
            <EventSetter Event="Unchecked" Handler="ordenarCheckbox_Unchecked"/>
        </Style>

        <Style TargetType="{x:Type DockPanel}">
            <Setter Property="Margin" Value="10"></Setter>
        </Style>


        <Style TargetType="{x:Type TextBox}" x:Key="partidaRespuestaTextBoxEstilo" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Margin" Value="10,0,5,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=PartidaEnCurso}" Value="True">
                    <Setter Property="IsReadOnly" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBox}" >
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Padding" Value="2"/>
        </Style>
        
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Width" Value="100"/>
        </Style>


        <Style TargetType="{x:Type Expander}" x:Key="editarExpanderEstilo" BasedOn="{StaticResource {x:Type Expander}}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="0,5,5,5"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="IsEnabled" Value="True"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=preguntasListBox, Path=SelectedItem}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style TargetType="{x:Type Expander}" x:Key="pistaExpanderEstilo" BasedOn="{StaticResource {x:Type Expander}}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Header" Value="Ver Pista"/>
            <Style.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Setter Property="Header" Value="Ocultar Pista"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" x:Key="ImagenPreguntaEstilo">
            <Setter Property="Source" Value="{Binding Path=NuevaPregunta.Imagen}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=NuevaPregunta.Imagen}" Value="{x:Null}">
                    <Setter Property="Source" Value="assets/image_not_found.png"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Image}" x:Key="partidaImageEstilo">
            <Setter Property="Source" Value="assets/fallback-image.jpg"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=PartidaEnCurso}" Value="True">
                    <Setter Property="Source" Value="{Binding Path=PreguntaActual.Imagen}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=PartidaEnCurso}" Value="False">
                    <Setter Property="Source" Value="assets/fallback-image.jpg"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" x:Key="iconoDificultad">
            <Setter Property="Margin" Value="0,5,5,5"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Dificultad}" Value="Fácil">
                    <Setter Property="Source" Value="assets/facil.png"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Dificultad}" Value="Media">
                    <Setter Property="Source" Value="assets/media.png"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Dificultad}" Value="Difícil">
                    <Setter Property="Source" Value="assets/dificil.png"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" x:Key="iconoCategoria">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Categoria}" Value="Disney">
                    <Setter Property="Source" Value="assets/disney.png"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Categoria}" Value="Pixar">
                    <Setter Property="Source" Value="assets/pixar.png"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Categoria}" Value="Marvel">
                    <Setter Property="Source" Value="assets/marvel.png"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Categoria}" Value="DC">
                    <Setter Property="Source" Value="assets/dc.png"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--#region Plantilla Items-->
        <DataTemplate x:Key="plantillaPreguntas">
            <Border Margin="5" CornerRadius="10" Width="120" Height="150" Background="#825eb6">
                <DockPanel Margin="8" LastChildFill="False">
                    <Border DockPanel.Dock="Top" BorderBrush="White" BorderThickness="2" CornerRadius="10" Width="90" Height="90">
                        <Border.Background>
                            <ImageBrush  Stretch="UniformToFill" ImageSource="{Binding Path=Imagen, Mode=OneWay}"/>
                        </Border.Background>
                        <Border Margin="2" CornerRadius="5" Width="30" Height="30" VerticalAlignment="Bottom" HorizontalAlignment="Right" Background="{Binding Path=Dificultad, Converter={StaticResource conversorDificultadColor}}">
                            <Image Width="25" Style="{StaticResource iconoCategoria}"/>
                        </Border>
                    </Border>
                    <TextBlock DockPanel.Dock="Top" FontWeight="DemiBold"  Margin="10,5,0,0" Foreground="White" Text="{Binding Path=Texto}" TextTrimming="WordEllipsis"/>
                    <TextBlock DockPanel.Dock="Top" Margin="15,5,0,0" Foreground="White" Text="{Binding Path=Respuesta}" TextTrimming="WordEllipsis" />
                    <!--<Image DockPanel.Dock="Right" Margin="0,0,10,0"   Width="35" Style="{StaticResource iconoDificultad}"/>-->
                </DockPanel>
            </Border>
        </DataTemplate>
        <ControlTemplate x:Key="GroupBoxControlTemplate" TargetType="{x:Type GroupBox}">
            <Grid SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="6"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="6"/>
                </Grid.RowDefinitions>
                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3"/>
                <Border BorderBrush="LightCyan" BorderThickness="2" Grid.ColumnSpan="4" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3">
                    <Border.OpacityMask>
                        <MultiBinding ConverterParameter="7" UpdateSourceTrigger="Default">
                            <MultiBinding.Converter>
                                <BorderGapMaskConverter/>
                            </MultiBinding.Converter>
                            <Binding ElementName="Header" Path="ActualWidth"/>
                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                        </MultiBinding>
                    </Border.OpacityMask>
                </Border>
                <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
                <ContentPresenter Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="CheckBoxControlTemplate" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="checkBoxBorder" CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid x:Name="markGrid">
                        <Path x:Name="optionMark" Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Fill="DeepPink" Margin="3" Opacity="0" Stretch="None"/>
                        <Rectangle x:Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0"/>
                    </Grid>
                </Border>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="4,-1,0,0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="Lavender"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF5593FF"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFE6E6E6"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFD9ECFF"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ButtonControlTemplate" TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="DarkSeaGreen" BorderThickness="1.5" Background="LightSeaGreen" CornerRadius="3" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="MediumSeaGreen"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="LightSeaGreen"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="DarkSeaGreen"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="LightSeaGreen"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="TabItemControlTemplate" TargetType="{x:Type TabItem}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                <Border x:Name="mainBorder" BorderBrush="White" BorderThickness="1,1,1,0" Background="#71339e" Margin="0">
                    <Border x:Name="innerBorder" BorderBrush="White" BorderThickness="1,1,1,0" Background="Indigo" Margin="-1" Opacity="0"/>
                </Border>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" TargetName="mainBorder">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFECF4FC" Offset="0"/>
                                <GradientStop Color="#FFDCECFC" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" TargetName="mainBorder">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFECF4FC" Offset="0"/>
                                <GradientStop Color="#FFDCECFC" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" TargetName="mainBorder">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFECF4FC" Offset="0"/>
                                <GradientStop Color="#FFDCECFC" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FF7EB4EA"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" TargetName="mainBorder">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="LightSeaGreen" Offset="0"/>
                                <GradientStop Color="LightSeaGreen" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="White"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                    <Setter Property="Background" TargetName="mainBorder" Value="Indigo"/>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                    <Setter Property="Background" TargetName="mainBorder" Value="Indigo"/>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                    <Setter Property="Background" TargetName="mainBorder" Value="Indigo"/>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                    <Setter Property="Background" TargetName="mainBorder" Value="Indigo"/>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="#FFD9D9D9"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Panel.ZIndex" Value="1"/>
                    <Setter Property="Margin" Value="-2,-2,0,-2"/>
                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Panel.ZIndex" Value="1"/>
                    <Setter Property="Margin" Value="-2,0,-2,-2"/>
                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Panel.ZIndex" Value="1"/>
                    <Setter Property="Margin" Value="0,-2,-2,-2"/>
                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Panel.ZIndex" Value="1"/>
                    <Setter Property="Margin" Value="-2,-2,-2,0"/>
                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                </MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--#endregion Plantilla Items-->
    </Window.Resources>
    <Grid>
        <TabControl x:Name="trivialTabControl" Background="Indigo">
            <TabItem Header="Jugar">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*"></RowDefinition>
                        <RowDefinition Height="0.30*"></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition MaxWidth="380"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button x:Name="siguientePreguntaButton" Content="Siguiente" Click="siguientePreguntaButton_Click" Style="{StaticResource pasarButtonEstilo}"/>
                        <Button x:Name="anteriorPreguntaButton" Content="Anterior" Click="anteriorPreguntaButton_Click" Style="{StaticResource pasarButtonEstilo}"/>
                    </StackPanel>
                    <Image Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Center" Source="{Binding Path=PreguntaActual.Imagen}"  Stretch="Fill"  Margin="10" Style="{StaticResource partidaImageEstilo}"/>
                    <Border Grid.Row="0" Grid.Column="0" VerticalAlignment="Top" CornerRadius="15" Margin="20" Background="{Binding Path=PreguntaActual.Dificultad, Converter={StaticResource conversorDificultadColor}}" HorizontalAlignment="Left">
                        <Image  Margin="10" Source="{Binding Path=PreguntaActual.Categoria, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource categoriaConverter}}" Width="40"/>
                    </Border>
                    <DockPanel Grid.Row="2" Grid.Column="0" VerticalAlignment="Top" Grid.ColumnSpan="2" Margin="10,5,10,0" IsEnabled="{Binding Path=PartidaEnCurso}">
                        <TextBlock DockPanel.Dock="Top" FontSize="18" Text="{Binding Path=PreguntaActual.Texto}" Style="{StaticResource tituloTextBlock}" VerticalAlignment="Center" TextWrapping="Wrap" Margin="10,5,10,5"/>
                        <TextBlock DockPanel.Dock="Top" FontSize="18"  Text="Respuesta" VerticalAlignment="Center" Margin="10,0,10,2"/>
                        <Grid DockPanel.Dock="Top">
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="respuestaUsuarioTextBox" Grid.Row="0" Grid.Column="0" Text="{Binding Path=RespuestaUsuario, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource partidaRespuestaTextBoxEstilo}"/>
                            <Button x:Name="validarButton" Grid.Row="0" Grid.Column="1" Content="Validar" HorizontalAlignment="Left" Style="{StaticResource validarButtonEstilo}" Click="validarButton_Click" VerticalAlignment="Top"/>
                        </Grid>
                        <Expander x:Name="pistaExpander" FontSize="18" Style="{StaticResource pistaExpanderEstilo}" >
                            <TextBlock FontSize="15" Text="{Binding Path=PreguntaActual.Respuesta, Converter={StaticResource conversorPista}}" Margin="30,0,0,0" />
                        </Expander>
                    </DockPanel>
                    <StackPanel  Grid.Row="0" Grid.Column="2" Grid.RowSpan="3">
                        <GroupBox Padding="5" Margin="10" Header="Categorías conseguidas" Style="{StaticResource gestionarPreguntasGroupBoxEstilo}" MaxHeight="400" >
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition Height="0.5*"></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition Height="0.5*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition ></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Row="0" Grid.Column="0"  Source="assets/disney.png" Opacity="{Binding Path=Partida.DisneyAdivinado, Converter={StaticResource opacidadConverter}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource jugarCategoriasImagenEstilo}"/>
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Disney" Style="{StaticResource disneyAdivinadoTextBlockEstilo}"/>
                                <Image Grid.Row="0" Grid.Column="1" Source="assets/pixar.png" Opacity="{Binding Path=Partida.PixarAdivinado, Converter={StaticResource opacidadConverter}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource jugarCategoriasImagenEstilo}"/>
                                <TextBlock Grid.Row="1" Grid.Column="1" Text="Pixar" Style="{StaticResource pixarAdivinadoTextBlockEstilo}"/>
                                <Image Grid.Row="2" Grid.Column="0" Source="assets/marvel.png" Opacity="{Binding Path=Partida.MarvelAdivinado, Converter={StaticResource opacidadConverter}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource jugarCategoriasImagenEstilo}"/>
                                <TextBlock Grid.Row="3" Grid.Column="0" Text="Marvel" Style="{StaticResource marvelAdivinadoTextBlockEstilo}"/>
                                <Image Grid.Row="2" Grid.Column="1" Source="assets/dc.png" Opacity="{Binding Path=Partida.DcAdivinado, Converter={StaticResource opacidadConverter}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource jugarCategoriasImagenEstilo}"/>
                                <TextBlock Grid.Row="3" Grid.Column="1" Text="DC" Style="{StaticResource dcAdivinadoTextBlockEstilo}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox MaxHeight="300" Margin="10,10,10,0" Header="Configuración" Style="{StaticResource gestionarPreguntasGroupBoxEstilo}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <ComboBox x:Name="dificultadPartidaComboBox"  Height="27" ItemsSource="{Binding Path=Niveles}" SelectedItem="{Binding Path=PreguntaActual.Dificultad}"></ComboBox>
                                <Button x:Name="nuevaPartidaButton" Content="Nueva Partida" Padding="5" Click="nuevaPartidaButton_Click"/>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Añadir Pregunta" Style="{StaticResource habilitaTabItemEstilo}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <GroupBox Grid.Row="0" Grid.Column="0" Header="Información" Style="{StaticResource añadirPreguntasGroupBoxEstilo}">
                        <StackPanel>
                            <StackPanel Margin="10">
                                <TextBlock Style="{StaticResource añadirPreguntasTextBlockEstilo}">Pregunta</TextBlock>
                                <TextBox x:Name="añadirPreguntaTextBox" Text="{Binding Path=NuevaPregunta.Texto, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            </StackPanel>
                            <StackPanel Margin="10">
                                <TextBlock Style="{StaticResource añadirPreguntasTextBlockEstilo}">Respuesta</TextBlock>
                                <TextBox x:Name="añadirRespuestaTextBox" Text="{Binding Path=NuevaPregunta.Respuesta, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            </StackPanel>
                            <StackPanel Margin="10">
                                <TextBlock Style="{StaticResource añadirPreguntasTextBlockEstilo}">Imagen</TextBlock>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3*"></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <TextBox x:Name="añadirImagenTextBox" Grid.Row="0" Height="27" Grid.Column="0" Text="{Binding Path=NuevaPregunta.Imagen, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" IsReadOnly="True"></TextBox>
                                    <Button x:Name="añadirExaminarButton" Grid.Row="0" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource pequeñoButtonEstilo}" Click="examinarButton_Click">Examinar</Button>
                                </Grid>
                            </StackPanel>
                            <DockPanel LastChildFill="False">
                                <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Style="{StaticResource añadirPreguntasTextBlockEstilo}">Dificultad</TextBlock>
                                <ComboBox x:Name="combo" DockPanel.Dock="Left" ItemsSource="{Binding Path=Niveles}" SelectedItem="{Binding Path=NuevaPregunta.Dificultad, UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                                <TextBlock VerticalAlignment="Center" DockPanel.Dock="Left" Margin="20,0,0,0">Categoría</TextBlock>
                                <ComboBox DockPanel.Dock="Left" Margin="5,5,0,5" ItemsSource="{Binding Path=Categorias, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=NuevaPregunta.Categoria, UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                            </DockPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="añadirPreguntaButton" Click="añadirPreguntaButton_Click" >Añadir Pregunta</Button>
                                <Button x:Name="limpiarFormButton" Click="limpiarFormButton_Click">Limpiar Formulario</Button>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Grid.Row="0" Grid.Column="1" Header="Vista previa" Style="{StaticResource añadirPreguntasGroupBoxEstilo}">
                        <StackPanel>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Row="0" Grid.Column="0" Margin="10" Style="{StaticResource ImagenPreguntaEstilo}"></Image>
                                <Border Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="20"  Width="55" Height="50" CornerRadius="15"  Background="{Binding Path=NuevaPregunta.Dificultad, Converter={StaticResource conversorDificultadColor}}">
                                    <Image Grid.Row="1" Width="40" Source="{Binding Path=NuevaPregunta.Categoria, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource categoriaConverter}}"></Image>
                                </Border>
                            </Grid>

                            <TextBlock Text="{Binding Path=NuevaPregunta.Texto}" Margin="15,0,10,0"  Style="{StaticResource tituloTextBlock}"></TextBlock>
                            <TextBlock Text="{Binding Path=NuevaPregunta.Respuesta}" Margin="15,0,10,0" FontSize="17"></TextBlock>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Gestionar Preguntas" Style="{StaticResource habilitaTabItemEstilo}" >
                <DockPanel Background="Indigo">
                    <Expander x:Name="editarExpander" Header="Editar" DockPanel.Dock="Bottom" Style="{StaticResource editarExpanderEstilo}">
                        <Grid Visibility="Visible" >
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="2*"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Style="{StaticResource gestionarTextBlockEstilo}">Pregunta</TextBlock>
                            <TextBox x:Name="preguntaTextBox" Grid.Row="0" Grid.Column="1" Text="{Binding Path=PreguntaSeleccionada.Texto, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            <TextBlock Grid.Row="1" Grid.Column="0" Style="{StaticResource gestionarTextBlockEstilo}">Respuesta</TextBlock>
                            <TextBox x:Name="respuestaTextBox" Grid.Row="1" Grid.Column="1" Text="{Binding Path=PreguntaSeleccionada.Respuesta, UpdateSourceTrigger=PropertyChanged}" ></TextBox>
                            <TextBlock Grid.Row="2" Grid.Column="0" Style="{StaticResource gestionarTextBlockEstilo}">Imágen</TextBlock>
                            <TextBox x:Name="imagenTextBox" Grid.Row="2" Grid.Column="1" IsReadOnly="True" Text="{Binding Path=PreguntaSeleccionada.Imagen, UpdateSourceTrigger=PropertyChanged}" ></TextBox>
                            <Button x:Name="examinarButton" Grid.Row="2" Grid.Column="2" HorizontalAlignment="Left" Margin="10,0,10,0" Style="{StaticResource pequeñoButtonEstilo}">Examinar</Button>
                            <DockPanel Grid.Row="3" Grid.Column="1" LastChildFill="False">
                                <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center">Dificultad</TextBlock>
                                <ComboBox  DockPanel.Dock="Left" ItemsSource="{Binding Path=Niveles}" SelectedItem="{Binding Path=PreguntaSeleccionada.Dificultad, UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                                <ComboBox DockPanel.Dock="Right" Margin="5,5,0,5" ItemsSource="{Binding Path=Categorias}" SelectedItem="{Binding Path=PreguntaSeleccionada.Categoria, UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                                <TextBlock VerticalAlignment="Center" DockPanel.Dock="Right" >Categoría</TextBlock>
                            </DockPanel>

                        </Grid>
                    </Expander>
                    <StackPanel DockPanel.Dock="Right" Width="140" Margin="10,0,0,0" >
                        <GroupBox Header="Ordenar" Margin="0" Style="{StaticResource gestionarPreguntasGroupBoxEstilo}">
                            <StackPanel >
                                <CheckBox x:Name="ordenarCategoriaCheckbox" Content="Por categoría" Checked="ordenarCategoriaCheckbox_Checked" Style="{StaticResource ordenarPreguntasCheckboxEstilo}"/>
                                <CheckBox x:Name="ordenarDificultadCheckbox" Content="Por dificultad" Checked="ordenarDificultadCheckbox_Checked" Style="{StaticResource ordenarPreguntasCheckboxEstilo}"/>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Ficheros" Style="{StaticResource gestionarPreguntasGroupBoxEstilo}">
                            <StackPanel>
                                <Button x:Name="cargaJSONButton" Content="Cargar de JSON" Click="cargaJSONButton_Click"/>
                                <Button  x:Name="guardaJSONButton"  Content="Guardar en JSON" Click="guardaJSONButton_Click"/>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Otros" Style="{StaticResource gestionarPreguntasGroupBoxEstilo}">
                            <StackPanel>
                                <Viewbox>
                                    <Button x:Name="eliminarPreguntaButton" Content="Eliminar Pregunta" Click="eliminarPreguntaButton_Click"/>
                                </Viewbox>
                                <Viewbox>
                                    <Button x:Name="limpiarSeleccionPreguntaButton" Content="Limpiar Selección" Click="limpiarSeleccionPreguntaButton_Click"/>
                                </Viewbox>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                    <ListBox x:Name="preguntasListBox" DockPanel.Dock="Top" Padding="10" ItemsSource="{Binding Path=Preguntas,  UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=PreguntaSeleccionada, UpdateSourceTrigger=PropertyChanged}" ItemTemplate="{StaticResource plantillaPreguntas}"  ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" Background="Lavender">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel></WrapPanel>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                </DockPanel>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
